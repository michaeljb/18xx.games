- make Game use the Tree instead of its actions array
    - current action id --> trunk/canonical head

- add basic visualization

    - `child` relations could have solid line, other `children` get dashed?
        - undo/redo child relations dotted?

    - colors for different states
        - premoves
        - broken actions
        - current head
        - "change history" branches
        - end game action
        - chat branches

- URL param head=, history navigation on undone branches
    - different head given to ActionTree::Tree

- random thought/note, don't know if it has more implications yet..  undo/redo
    - actions immediately have a child, other actions don't ie when processing
    - an action, it is added to tree and affects game state and then is done,
    - and has no child; undo/redo has a child, and the game state for _that_
    - node is reprocessed

- more tests

    - when adding undo/redo to tree, add instance var on Node that tracks new
      head? in ActionTree2.json, action 6 undoes 5, so the head is effectively 4
      again; filtered actions should return [2,3,4] --> undo's new_head is
      undo.parent.parent? or undo could just have 'child' set instead of being a
      new prop
        - when given head is an undo/redo, just follow the child to the 'real'
          node

    - do actions at start of a game, then chats, then undo actions to root, test
      filtered_actions for this


    - can "pending undos" be removed by simply taking a `head` and looking at
      chains of undo_parent and redo_parent?

- rename 'tree' to 'graph'
